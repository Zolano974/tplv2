<?php

namespace FirstBundle\Repository;

use Doctrine\ORM\EntityRepository;
use FirstBundle\Entity\Reminder;


/**
 * ReminderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReminderRepository extends EntityRepository
{

    public function createReminderSet($user_id, $workset_id){

        $em = $this->getEntityManager();

        $xcoords = array('A','B','C');
        $ycoords = array(1,2,3,4);

        foreach($xcoords as $x){
            foreach($ycoords as $y){

                $reminder = new Reminder();
                $reminder->setUserId($user_id);
                $reminder->setWorksetId($workset_id);
                $reminder->setXCoord($x);
                $reminder->setYCoord($y);
                $reminder->setText("");
//                dump("user : " . $user_id . " workset " . $workset_id . " x : $x , y : $y");
//                dump($reminder);

                $em->persist($reminder);
            }
        }

        $em->flush();

    }

    public function fetchAllInMatrix($user_id, $workset_id){

        $list = $this->findBy(array('userId' => $user_id, 'worksetId' => $workset_id));

        $matrix = array();

        foreach($list as $reminder){
            $matrix[$reminder->getXcoord()][$reminder->getYcoord()] = $reminder;
        }

        return $matrix;

    }

    public function fetchOneInMatrix($user_id, $workset_id, $x, $y){

        if(($x != "A" && $x != "B" && $x != "C")||($y < 1 || $y > 4)){
            return null;
        }
        else{
            return $this->findBy(array('userId' => $user_id, 'worksetId' => $workset_id, 'xCoord' => $x, 'yCoord' => $y));
        }

    }
}
